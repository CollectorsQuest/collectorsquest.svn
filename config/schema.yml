connection: propel
noXsd: false
defaultIdMethod: native
package: lib.model

classes:
  Collector:
    columns:
      id:             ~
      facebook_id:    { type: varchar, size: 64, required: false, index: unique }
      username:       { type: varchar, size: 64, required: true }
      display_name:   { type: varchar, size: 64, required: true, primaryString: true }
      slug:           varchar(64)
      sha1_password:  { type: varchar, size: 40, required: true }
      salt:           { type: varchar, size: 32, required: true }
      score:          { type: integer, required: false, default: 0 }
      email:          { type: varchar, size: 128, required: true }
      user_type:      { type: char, sqlType: "ENUM('Collector','Seller')", default: Collector, required: true }
      items_allowed:         integer
      what_you_collect:      { type: varchar, size: 255, required: false }
      purchases_per_year:    { type: integer, default: 0 }
      what_you_sell:         { type: varchar, size: 255, required: false }
      annually_spend:        { type: float, default: 0 }
      most_expensive_item:   { type: float, default: 0 }
      company:               { type: varchar, size: 255, required: false }
      is_public:      { type: boolean, default: true }
      session_id:     { type: varchar, size: 32 }
      last_seen_at:   timestamp

    propel_behaviors:
      # archivable: ~
      soft_delete: ~
      timestampable: ~

  CollectorProfile:
    columns:
      id:              ~
      collector_id:    { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      collector_type:  varchar(64)
      birthday:        date
      gender:          { type: char, sqlType: "ENUM('f','m')", required: false }
      zip_postal:      varchar(10)
      country:         varchar(64)
      country_iso3166: varchar(2)
      website:         varchar(128)
      about:           longvarchar
      collections:     longvarchar
      collecting:      varchar(255)
      most_spent:      integer
      anually_spent:   integer
      new_item_every:  varchar(64)
      interests:       longvarchar
      is_featured:     { type: boolean, default: false }
      is_seller:       { type: boolean, default: false }
      is_image_auto:   { type: boolean, required: true, default: true }
      preferences:     longvarchar
      notifications:   longvarchar
      updated_at:      ~
      created_at:      ~
    uniques:
      collector_profile_U_1: [collector_id]

  CollectorIdentifier:
    columns:
      id:  ~
      collector_id:  { type: integer, foreignClass: Collector, foreignReference: id, onDelete: cascade }
      identifier:    varchar(255)
      created_at:  ~
    uniques:
      collector_identifier_U_1: [collector_id, identifier]

  CollectorInterview:
    columns:
      id:  ~
      collector_id:            { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      collection_category_id:  { type: integer, foreignClass: CollectionCategory, foreignReference: id, required: false, onDelete: setnull }
      collection_id:           { type: integer, foreignClass: Collection, foreignReference: id, required: false, onDelete: setnull }
      title:                   { type: varchar, size: 128, required: true, primaryString: true }
      catch_phrase:            { type: varchar, size: 128, required: true }
      is_active:               { type: boolean, default: false }
      created_at:  ~

  CollectorGeocache:
    columns:
      id:  ~
      collector_id:     { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      country:          { type: char, size: 64 }
      country_iso3166:  { type: char, size: 2 }
      state:            { type: varchar, size: 64 }
      county:           { type: varchar, size: 64 }
      city:             { type: varchar, size: 64 }
      zip_postal:       { type: char, size: 10 }
      address:          { type: varchar, size: 128 }
      latitude:         { type: float, sqlType: "DECIMAL(7,5)" }
      longitude:        { type: float, sqlType: "DECIMAL(7,5)" }
      timezone:         { type: varchar, size: 128 }

  CollectorFriend:
    columns:
      id:  ~
      collector_id:  { type: integer, foreignClass: Collector, foreignReference: id }
      friend_id:     { type: integer, foreignClass: Collector, foreignReference: id }
      created_at:  ~

  InterviewQuestion:
    columns:
      id:                      ~
      collector_interview_id:  { type: integer, foreignClass: CollectorInterview, foreignReference: id, required: true, onDelete: cascade }
      question:                { type: varchar, size: 128, required: true }
      answer:                  { type: longvarchar, required: true }
      photo:                   varchar(128)

  Collection:
    columns:
      id:                      ~
      collection_category_id:  { type: integer, required: false, foreignClass: CollectionCategory, foreignReference: id, onDelete: setnull }
      collector_id:            { type: integer, required: true, foreignClass: Collector, foreignReference: id, onDelete: cascade }
      name:                    { type: varchar, size: 255, required: true, primaryString: true }
      slug:                    { type: varchar, size: 128, required: true }
      description:             { type: longvarchar, required: true }
      num_items:               { type: integer, required: false, default: 0 }
      num_views:               { type: integer, required: false, default: 0 }
      num_comments:            { type: integer, required: false, default: 0 }
      num_ratings:             { type: integer, required: false, default: 0 }
      score:                   { type: integer, required: false, default: 0 }
      is_public:               { type: boolean, default: true }
      is_featured:             { type: boolean, default: false }
      comments_on:             { type: boolean, default: true }
      rating_on:               { type: boolean, default: true }

    propel_behaviors:
      # archivable: ~
      soft_delete: ~
      timestampable: ~

  CollectionCategory:
    columns:
      id:         { type: smallint, autoIncrement: true, primaryKey: true }
      parent_id:  { type: integer, default: 0, required: false }
      name:       { type: varchar, size: 64, required: true, primaryString: true }
      slug:       { type: varchar, size: 64, required: true }
      score:      { type: integer, required: false, default: 0 }

  CollectionCategoryField:
    columns:
      id:                  ~
      collection_category_id:  { type: integer, required: true, foreignClass: CollectionCategory, foreignReference: id, onDelete: cascade }
      custom_field_id:     ~
    uniques:
      collection_category_field: [collection_category_id, custom_field_id]

  Collectible:
    columns:
      id: ~
      collector_id:      { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      collection_id:     { type: integer, foreignClass: Collection, foreignReference: id, required: true, onDelete: cascade }
      name:              { type: varchar, size: 255, required: true, primaryString: true }
      slug:              { type: varchar, size: 128, index: unique }
      description:       { type: longvarchar, required: true }
      num_comments:      { type: integer, required: false, default: 0 }
      score:             { type: integer, required: false, default: 0 }
      position:          { type: integer, required: false, default: 0 }
      is_name_automatic: { type: boolean, default: false }

    propel_behaviors:
      # archivable: ~
      soft_delete: ~
      timestampable: ~

  CollectibleForSale:
    columns:
      id:  ~
      collectible_id:  { type: integer, required: true, foreignClass: Collectible, foreignReference: id, onDelete: cascade }
      price:  { type: float }
      condition:  { type: char, sqlType: "ENUM('excellent','very good','good','fair','poor')", required: true }
      is_price_negotiable:  { type: boolean, default: false }
      is_shipping_free:  { type: boolean, default: false }
      is_sold:  { type: boolean, default: false }
      is_ready: { type: boolean, default: false, description: 'Show in the market or no' }
      quantity: { type: integer, required: true, default: 1 }
    uniques:
      collectible_for_sale_item: [collectible_id]

    propel_behaviors:
      # archivable: ~
      soft_delete: ~
      timestampable: ~

  CollectibleOffer:
    columns:
      id:  ~
      collectible_id: { type: integer, required: true, foreignClass: Collectible, foreignReference: id, onDelete: cascade }
      collectible_for_sale_id: { type: integer, required: true, foreignClass: CollectibleForSale, foreignReference: id, onDelete: cascade }
      collector_id:  { type: integer, foreignClass: Collector, foreignReference: id }
      price:   { type: float }
      status:  { type: char, sqlType: "ENUM('pending','counter','rejected','accepted')", required: true }

    propel_behaviors:
      # archivable: ~
      soft_delete: ~
      timestampable: ~

  Multimedia:
    columns:
      id:  ~
      model:       { type: char, size: 64, required: true }
      model_id:    { type: integer }
      type:        { type: char, sqlType: "ENUM('image','video')", default: image, required: true }
      name:        { type: varchar, size: 128, required: true }
      md5:         { type: char, size: 32, required: true }
      colors:      { type: varchar(128), required: false }
      orientation: { type: char, sqlType: "ENUM('landscape','portrait')", default: landscape, required: false }
      source:      { type: varchar(255), required: false }
      is_primary:  { type: boolean, sqlType: "BOOL", default: false }
      updated_at:  ~
      created_at:  ~
    indexes:
      multimedia_I_1: [model, model_id]
    uniques:
      multimedia_U_1: [model, model_id, md5]

  PrivateMessage:
    columns:
      id:  ~
      thread:  { type: varchar, size: 32 }
      sender:  { type: integer, required: true }
      receiver:  { type: integer, required: true }
      subject:  { type: varchar, size: 255, required: true }
      body:  { type: longvarchar, required: true }
      is_rich: { type: boolean, sqlType: "BOOL", default: false }
      is_read:  { type: boolean, sqlType: "BOOL", default: false }
      is_replied:  { type: boolean, sqlType: "BOOL", default: false }
      is_forwarded:  { type: boolean, sqlType: "BOOL", default: false }
      is_marked: { type: boolean, sqlType: "BOOL", default: false }
      is_deleted:  { type: boolean, sqlType: "BOOL", default: false }
      created_at:  ~

  PrivateMessageTemplate:
    columns:
      id:  ~
      subject:  { type: varchar, size: 255, required: true }
      body:  { type: longvarchar, required: true }
      description:  { type: varchar, size: 255, required: false }
      updated_at:  ~
      created_at:  ~

  Comment:
    columns:
      id:  ~
      disqus_id:       { type: char, size: 10 }
      parent_id:       { type: char, size: 10 }
      collection_id:   { type: integer, foreignClass: Collection, foreignReference: id, required: true, onDelete: cascade }
      collectible_id:  { type: integer, foreignClass: Collectible, foreignReference: id, required: false, onDelete: setnull }
      collector_id:    { type: integer, foreignClass: Collector, foreignReference: id, required: false, onDelete: cascade }
      author_name:     { type: varchar, size: 128, required: false }
      author_email:    { type: varchar, size: 128, required: false }
      author_url:      { type: varchar, size: 255, required: false }
      subject:         { type: varchar, size: 128, required: false }
      body:            { type: longvarchar, required: true }
      ip_address:      { type: varchar, size: 15 }
      created_at:  ~
    uniques:
      comment_U_1:  [disqus_id]

  CustomField:
    columns:
      id: ~
      name:        { type: varchar, size: 64, required: true }
      type:        { type: tinyint, required: true }
      object:      longvarchar
      validation:  longvarchar

  CustomValue:
    columns:
      id: ~
      collection_id:    { type: integer, foreignClass: Collection, foreignReference: id, required: true, onDelete: cascade }
      collectible_id:   { type: integer, foreignClass: Collectible, foreignReference: id, required: true, onDelete: cascade }
      field_id:         { type: integer, required: true }
      value_text:       varchar(255)
      value_date:       date
      value_numeric:    float
      value_bool:       { type: boolean, default: false }
      created_at: ~
      updated_at: ~

  Event:
    columns:
      id: ~
      title:        { type: varchar, size: 128, required: true }
      description:  { type: longvarchar, required: true }
      created_at: ~

  EventVideo:
    columns:
      id: ~
      event_id: ~
      title:        { type: varchar, size: 128, required: true }
      description:  { type: longvarchar, required: true }
      lenght:       integer
      thumb_small:  varchar(255)
      thumb_large:  varchar(255)
      filename:     varchar(255)
      views:        integer
      created_at: ~

  Video:
    columns:
      id: ~
      title:         { type: varchar, size: 64, required: true }
      slug:          { type: varchar, size: 64, required: true }
      description:   { type: longvarchar, required: true }
      type:          { type: varchar, size: 64, required: true }
      length:        integer
      filename:      varchar(128)
      thumb_small:   varchar(128)
      thumb_large:   varchar(128)
      is_published:  boolean
      published_at:  timestamp
      uploaded_at:   timestamp
      created_at:    ~

  VideoPlaylist:
    columns:
      id:           ~
      video_id:     ~
      playlist_id:  ~
      position:     tinyint

  VideoCollectionCategory:
    columns:
      id:           ~
      video_id:     ~
      collection_category_id:  { type: integer, required: true, foreignClass: CollectionCategory, foreignReference: id, onDelete: cascade }
      created_at:   ~

  Playlist:
    columns:
      id:            ~
      title:         { type: varchar, size: 64, required: true }
      slug:          { type: varchar, size: 64, required: true }
      description:   { type: longvarchar, required: true }
      type:          { type: varchar, size: 64, required: true }
      length:        integer
      is_published:  boolean
      published_at:  timestamp
      created_at:    ~

  Trivia:
    columns:
      id:          ~
      content:     { type: longvarchar, required: true }
      created_at:  ~

  ResourceCategory:
    columns:
      id:          ~
      name:        { type: varchar, size: 128, required: true }
      slug:        varchar(128)
      thumbnail:   varchar(64)
      created_at:  ~

  ResourceEntry:
    columns:
      id:           ~
      category_id:  { type: integer, required: true, foreignClass: ResourceCategory, foreignReference: id }
      type:         { type: varchar, size: 24, required: true, default: Blog }
      name:         { type: varchar, size: 128, required: true }
      slug:         varchar(128)
      description:  { type: longvarchar, required: true }
      url:          { type: varchar, size: 255, required: true }
      rss:          { type: varchar, size: 255, required: true }
      thumbnail:    varchar(64)
      blogger:      varchar(128)
      email:        varchar(128)
      created_at:   ~

  Term:
    columns:
      id:    ~
      name:  { type: varchar, size: 100, primaryString: true }

  TermRelationship:
    columns:
      id:        ~
      term_id:   ~
      model:     varchar(30)
      model_id:  integer

  Score:
    columns:
      id:  ~
      day:          { type: date }
      model:        { type: char, size: 64, required: true }
      model_id:     { type: integer }
      views:        { type: integer, required: false, default: 0 }
      ratings:      { type: integer, required: false, default: 0 }
      score:        { type: integer, required: false, default: 0 }
      updated_at:   ~
      created_at:   ~
    uniques:
      score_U_1:  [day, model, model_id]

  Featured:
    treeMode: NestedSet
    columns:
      id:                ~
      featured_type_id:  { type: tinyint, required: true }
      featured_model:    { type: varchar, size: 64, required: true }
      featured_id:       { type: integer, required: false }
      tree_left:         { type: integer, required: true, default: 0, nestedSetLeftKey: true }
      tree_right:        { type: integer, required: true, default: 0, nestedSetRightKey: true }
      tree_scope:        { type: integer, required: true, default: 0, treeScopeKey: true }
      eblob:             longvarchar
      start_date:        date
      end_date:          date
      position:          { type: tinyint, required: false, default: 0 }
      is_active:         { type: boolean, default: true, required: true }

  Package:
    columns:
      id:                  ~
      package_name:        { type: varchar, size: 255, required: true }
      package_description: { type: longvarchar, required: false }
      max_items_for_sale:  integer
      package_price:       float
      plan_type:           { type: char, sqlType: "ENUM('Casual','Power')", default: NULL, required: true }
      updated_at:          ~
      created_at:          ~

  PackageTransaction:
    columns:
      id: ~
      collector_id:        { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      package_id:          { type: integer, foreignClass: Package, foreignReference: id, required: true, onDelete: cascade }
      max_items_for_sale:  integer
      package_price:       float
      expiry_date:         timestamp
      payment_status:      { type: varchar, default: pending, size: 255 }
      created_at:          ~

  Promotion:
    columns:
      id: ~
      promotion_name:   { type: varchar, size: 255, required: true }
      promotion_desc:   { type: longvarchar, required: false }
      promotion_code:   { type: varchar, size: 255, required: true }
      amount:           float
      amount_type:      { type: char, sqlType: "ENUM('Fix','Percentage')", default: Fix, required: true }
      no_of_time_used:  integer
      expiry_date:      timestamp
      updated_at:       ~
      created_at:       ~
    uniques:
      promotion_U_I: [promotion_code]

  PromotionTransaction:
    columns:
      id: ~
      promotion_id: { type: integer, foreignClass: Promotion, foreignReference: id, required: true, onDelete: cascade }
      collector_id: { type: integer, foreignClass: Collector, foreignReference: id, required: true, onDelete: cascade }
      amount:       float
      amount_type:  { type: varchar, default: pending, size: 255 }
      created_at:   ~

  NewsletterSignup:
    columns:
      id: ~
      email:        { type: varchar, size: 255, required: true }
      name:         { type: varchar, size: 255, required: true }
